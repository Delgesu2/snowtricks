security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        our_db_provider:
            entity:
                class: App\Domain\Entity\User
                # if you're using multiple entity managers
                                # manager_name: customer

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            pattern: ^/
            http_basic: ~
            provider: our_db_provider

            logout:
                path: /logout
                target: /

            guard:
                authenticators:
                    - App\Helper\LoginAuthenticator

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/create$, roles: ROLE_USER }
         - { path: ^/update, roles: ROLE_USER }
         - { path: ^/delete$, roles: ROLE_USER }
         - { path: ^/userlist$, roles: ROLE_ADMIN }
         - { path: ^/del_user, roles: ROLE_ADMIN }
         - { path: ^/userupdate, roles: IS_AUTHENTICATED_FULLY }
         - { path: ^/delcom, roles: ROLE_ADMIN }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

    encoders:
        App\Domain\Entity\User:
            algorithm: argon2i
